@model NorthwindMVC.Data.PRODUCT

@{
    ViewBag.Title = "Create Product";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PRODUCTID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRODUCTID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRODUCTID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PRODUCTNAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRODUCTNAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRODUCTNAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SUPPLIERID, "SUPPLIERID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SUPPLIERID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SUPPLIERID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CATEGORYID, "CATEGORYID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CATEGORYID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CATEGORYID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QUANTITYPERUNIT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QUANTITYPERUNIT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QUANTITYPERUNIT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UNITPRICE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UNITPRICE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UNITPRICE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UNITSINSTOCK, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UNITSINSTOCK, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UNITSINSTOCK, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UNITSONORDER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UNITSONORDER, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UNITSONORDER, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.REORDERLEVEL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.REORDERLEVEL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.REORDERLEVEL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DISCONTINUED, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DISCONTINUED, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DISCONTINUED, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
